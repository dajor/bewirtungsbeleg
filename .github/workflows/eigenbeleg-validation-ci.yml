name: Eigenbeleg Validation CI

# Trigger on push to dev branch and pull requests targeting dev
on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:
  validation-tests:
    name: Validation Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
          
      - name: Install dependencies
        run: yarn install --frozen-lockfile
        
      - name: Run TypeScript compilation check
        run: npx tsc --noEmit
        
      - name: Run validation unit tests
        run: |
          yarn test src/lib/validation.test.ts --coverage=false
          yarn test src/lib/eigenbeleg-validation.test.ts --coverage=false
        env:
          CI: true

  build-test:
    name: Build Test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: validation-tests
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
          
      - name: Install dependencies
        run: yarn install --frozen-lockfile
        
      - name: Build application
        run: yarn build
        env:
          # Mock OpenAI key for build process
          OPENAI_API_KEY: sk-test-key-for-build
          NEXTAUTH_SECRET: test-secret-for-build
          
  e2e-eigenbeleg-tests:
    name: Eigenbeleg E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: build-test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
          
      - name: Install dependencies
        run: yarn install --frozen-lockfile
        
      - name: Install Playwright
        run: yarn playwright install --with-deps chromium
        
      - name: Run Eigenbeleg validation E2E tests
        run: yarn playwright test eigenbeleg-validation-simple.spec.ts --reporter=html
        env:
          # Mock environment variables for E2E tests
          OPENAI_API_KEY: sk-test-key-for-e2e
          NEXTAUTH_SECRET: test-secret-for-e2e
          CI: true
          
      - name: Upload Playwright report on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: eigenbeleg-playwright-report
          path: playwright-report/
          retention-days: 7

  api-integration-tests:
    name: API Integration Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: validation-tests
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
          
      - name: Install dependencies
        run: yarn install --frozen-lockfile
        
      - name: Run API integration tests
        run: yarn test src/app/api/generate-pdf/eigenbeleg-fix.test.ts --coverage=false
        env:
          CI: true
          
  complete-ci:
    name: All Tests Complete
    runs-on: ubuntu-latest
    needs: [validation-tests, build-test, e2e-eigenbeleg-tests, api-integration-tests]
    if: always()
    
    steps:
      - name: Check all jobs status
        run: |
          if [[ "${{ needs.validation-tests.result }}" == "success" && 
                "${{ needs.build-test.result }}" == "success" && 
                "${{ needs.e2e-eigenbeleg-tests.result }}" == "success" && 
                "${{ needs.api-integration-tests.result }}" == "success" ]]; then
            echo "✅ All Eigenbeleg validation tests passed!"
            echo "The fix for 'image: Expected string, received null' is working correctly."
          else
            echo "❌ Some tests failed:"
            echo "Validation tests: ${{ needs.validation-tests.result }}"
            echo "Build test: ${{ needs.build-test.result }}"
            echo "E2E tests: ${{ needs.e2e-eigenbeleg-tests.result }}"
            echo "API tests: ${{ needs.api-integration-tests.result }}"
            exit 1
          fi