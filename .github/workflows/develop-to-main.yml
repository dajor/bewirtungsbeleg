name: Develop to Main Merge

on:
  push:
    branches:
      - develop

jobs:
  test-and-merge:
    if: "!contains(github.event.head_commit.message, '#auto-release')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install
          npm ci

      - name: Run tests with coverage
        run: npm test -- --coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          fail_ci_if_error: true

      - name: Get next version
        id: version
        uses: TriPSs/conventional-changelog-action@v4
        with:
          github-token: ${{ secrets.TOKEN }}
          preset: 'angular'
          tag-prefix: 'v'
          skip-version-file: true
          git-message: 'chore(release): {version}'
          release-count: 0
          output-file: 'false'

      - name: Create release notes
        run: |
          echo "Version ${{ steps.version.outputs.version }}" > release-notes.txt
          echo "Datum: $(date +'%d.%m.%Y')" >> release-notes.txt
          echo "" >> release-notes.txt
          echo "Änderungen:" >> release-notes.txt
          git log --pretty=format:"- %s (%an)" $(git describe --tags --abbrev=0)..HEAD >> release-notes.txt

      - name: Push to develop
        run: |
          git config --global user.name 'dajor'
          git config --global user.email 'daniel.jordan@fellowpro.com'
          git checkout develop
          git add release-notes.txt
          git commit -m "Update release notes for version ${{ steps.version.outputs.version }} #auto-release" || echo "Nothing to commit"
          git remote set-url origin https://${{ secrets.TOKEN }}@github.com/dajor/bewirtungsbeleg.git
          git pull origin develop
          git push origin develop

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.TOKEN }}
          commit-message: "Update release notes for version ${{ steps.version.outputs.version }}"
          title: "Release v${{ steps.version.outputs.version }}"
          body: "Automatisches Update der Release Notes für Version ${{ steps.version.outputs.version }}"
          branch: "release/v${{ steps.version.outputs.version }}"
          base: main
          labels: release
          draft: false
          delete-branch: true