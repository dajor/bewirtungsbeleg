name: Develop to Main Merge

on:
  push:
    branches:
      - develop

jobs:
  test-and-merge:
    if: "!contains(github.event.head_commit.message, '#auto-release')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # Verwende dajor's PAT für Berechtigungen auf private Repos und Push-Zugriff
          token: ${{ secrets.TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install
          npm ci

      - name: Run tests
        run: npm test

      - name: Get current version
        id: version
        run: |
          CURRENT_VERSION=$(cat version.txt)
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

      - name: Increment version
        id: increment
        run: |
          CURRENT_VERSION=$(cat version.txt)
          IFS='.' read -r major minor patch <<< "$CURRENT_VERSION"
          NEW_PATCH=$((patch + 1))
          NEW_VERSION="$major.$minor.$NEW_PATCH"
          echo "$NEW_VERSION" > version.txt
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Create release notes
        run: |
          mkdir -p public
          echo "# Version ${{ steps.increment.outputs.new_version }}" > public/release-notes.txt
          echo "Datum: $(date +'%d.%m.%Y')" >> public/release-notes.txt
          echo "" >> public/release-notes.txt
          echo "## Änderungen" >> public/release-notes.txt
          # Hole alle Commits seit dem letzten Tag
          git log --since="1 day ago" --pretty=format:"- %s (%an)" >> public/release-notes.txt
          echo "" >> public/release-notes.txt
          echo "## Technische Details" >> public/release-notes.txt
          echo "- Build: ${{ github.run_id }}" >> public/release-notes.txt
          echo "- Commit: ${{ github.sha }}" >> public/release-notes.txt

      - name: Push changes
        run: |
          git config --global user.name 'dajor'
          git config --global user.email 'daniel.jordan@fellowpro.com'
          git checkout develop
          git add version.txt public/release-notes.txt
          git commit -m "Bump version to ${{ steps.increment.outputs.new_version }} #auto-release"
          git remote set-url origin https://${{ secrets.TOKEN }}@github.com/dajor/bewirtungsbeleg.git
          git pull origin develop
          git push origin develop

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.TOKEN }}
          commit-message: "Release v${{ steps.increment.outputs.new_version }}"
          title: "Release v${{ steps.increment.outputs.new_version }}"
          body: |
            Automatisches Update für Version ${{ steps.increment.outputs.new_version }}
            
            ## Änderungen
            $(cat public/release-notes.txt | sed -n '/## Änderungen/,/## Technische Details/p' | sed '$d')
          branch: "release/v${{ steps.increment.outputs.new_version }}"
          base: main
          labels: release
          draft: false
          delete-branch: true